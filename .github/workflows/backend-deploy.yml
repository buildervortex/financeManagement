on:
  workflow_dispatch: 
  # push:
  #   branches:
  #     - master
  #     - test

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker hub
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_PASSWORD}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{secrets.DOCKERHUB_REPOSITORY}}:latest
          build-args: |
            FMEXPRESSPORT=4040
            FMJWTSYMETRICKEY=asdfasdfadsf
            FMDBCONNECTIONSTRING=mongodb://152.67.3.153:8040/financeManagement

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: Execute remote commands over ssh in server 1
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{secrets.SSH_HOST1}}
          username: ${{secrets.SSH_USERNAME}}
          password: ${{secrets.SSH_PASSWORD}}
          script: |
            # change the directory
            cd /home/lahirukasunidilhara

            # down the docker compose if previous compose is up
            docker compose down

            # pull the latest image
            docker compose pull

            # run the docker-compose file
            docker compose up -d

      - name: Execute remote commands over ssh in server 2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{secrets.SSH_HOST2}}
          username: ${{secrets.SSH_USERNAME}}
          password: ${{secrets.SSH_PASSWORD}}
          script: |
            # change the directory
            cd /home/lahirukasunidilhara

            # down the docker compose if previous compose is up
            docker compose down

            # pull the latest image
            docker compose pull

            # run the docker-compose file
            docker compose up -d
  automated-api-tests:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - uses: actions/checkout@v4
      - name: Install Postman CLI
        run: |
          curl -o- "https://dl-cli.pstmn.io/install/linux64.sh" | sh
      - name: Login to Postman CLI
        run: postman login --with-api-key ${{ secrets.POSTMAN_API_KEY }}
      - name: Run API tests
        run: |
          postman collection run "23897165-fdcd7d36-5438-4b2a-b938-196556bcf29e" -e "23897165-cfec7bab-cac6-4ddc-b107-3fe257effb88"